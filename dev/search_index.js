var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#WeightVectors.FixedSizeWeightVector","page":"API","title":"WeightVectors.FixedSizeWeightVector","text":"FixedSizeWeightVector <: AbstractWeightVector\n\nAn object that conforms to the AbstractWeightVector interface and cannot be resized.\n\n\n\n\n\n","category":"type"},{"location":"api/#WeightVectors.WeightVector","page":"API","title":"WeightVectors.WeightVector","text":"WeightVector <: AbstractWeightVector\n\nAn object that conforms to the AbstractWeightVector interface and can be resized.\n\n\n\n\n\n","category":"type"},{"location":"#WeightVectors","page":"Home","title":"WeightVectors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for WeightVectors.","category":"page"},{"location":"#WeightVectors.WeightVectors","page":"Home","title":"WeightVectors.WeightVectors","text":"WeightVectors\n\n<!– (Image: Stable) –> (Image: Dev) (Image: Build Status) (Image: Coverage) <!– (Image: PkgEval) –> (Image: Aqua)\n\nWeightVectors.jl implements efficient samplers which can be used to sample from a dynamic discrete distribution, supporting removal, addition and sampling of elements in constant time.\n\nThe key features of this package are\n\nExact Sampling: The probability of sampling an index is exactly proportional to its weight;\nFast Sampling: O(1) worst-case expected runtime for drawing a sample;\nFast Updates: O(1) worst-case amortized runtime for updating any weight;\nMemory Efficient: O(n) space complexity, where n is the number of weights;\nDynamic Sizing: Supports samplers that can be resized;\nPractical Performance: low constant factors, making it fast in practice.\n\nThe package exports two main types which conform to the AbstractArray API:\n\nFixedSizeWeightVector: For a static collection of weights which can be updated but not resized;\nWeightVector: For a collection of weights which can grow or shrink.\n\njulia> using Random, WeightVectors\n\njulia> rng = Xoshiro(42);\n\njulia> w = WeightVector([10.0, 50.0, 5.0, 35.0])\n4-element WeightVector:\n 10.0\n 50.0\n  5.0\n 35.0\n\njulia> println(rand(rng, w, 10))\n[2, 4, 4, 2, 2, 2, 4, 2, 4, 2]\n\njulia> w[1] = 100.0;\n\njulia> println(rand(rng, w, 10))\n[2, 1, 2, 1, 1, 2, 4, 1, 2, 2]\n\njulia> resize!(w, 6);\n\njulia> w[6] = 200.0;\n\njulia> println(rand(rng, w, 10))\n[6, 2, 6, 6, 6, 1, 2, 6, 6, 1]\n\nCitation\n\nIf you use this package in a publication, or simply want to refer to it, please cite the paper below:\n\n@misc{hafner2025exactsampler,\n      title={An Exact and Efficient Sampler for Dynamic Discrete Distributions}, \n      author={Lilith Orion Hafner and Adriano Meligrana},\n      year={2025},\n      eprint={2506.14062},\n      archivePrefix={arXiv},\n      primaryClass={cs.DS},\n      url={https://arxiv.org/abs/2506.14062}, \n}\n\n\n\n\n\n","category":"module"}]
}
